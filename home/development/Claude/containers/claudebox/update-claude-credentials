#!/bin/bash
set -euo pipefail

# Find the script location, handling both symlinks and direct execution
if [[ -L "${BASH_SOURCE[0]}" ]]; then
    # It's a symlink, resolve it
    SCRIPT_PATH="$(readlink "${BASH_SOURCE[0]}")"
else
    SCRIPT_PATH="${BASH_SOURCE[0]}"
fi

SCRIPT_DIR="$(cd "$(dirname "$SCRIPT_PATH")" && pwd)"
CRED_SCRIPT="$SCRIPT_DIR/get-claude-credentials.sh"
CRED_FILE="$HOME/.claude/.credentials.json"

# Check if get-claude-credentials.sh exists
if [[ ! -f "$CRED_SCRIPT" ]]; then
    echo "‚ùå Error: get-claude-credentials.sh not found at $CRED_SCRIPT"
    exit 1
fi

# Check if script is executable
if [[ ! -x "$CRED_SCRIPT" ]]; then
    echo "‚ùå Error: $CRED_SCRIPT is not executable"
    exit 1
fi

# Ensure ~/.claude directory exists
mkdir -p "$HOME/.claude"

# Unlock the keychain first
echo "üîì Unlocking keychain..."
security unlock-keychain ~/Library/Keychains/login.keychain-db

# Get credentials and write to file
echo "üìù Updating credentials at $CRED_FILE"

# Run the script and capture both stdout and stderr
if OUTPUT=$("$CRED_SCRIPT" 2>&1); then
    echo "$OUTPUT" > "$CRED_FILE"
    # Set restrictive permissions
    chmod 600 "$CRED_FILE"
    echo "‚úÖ Credentials updated successfully"
else
    echo "‚ùå Failed to get credentials"
    echo "Error output: $OUTPUT"
    exit 1
fi